}
#datum_labels voor charts
datum_labels <- function(start_date, end_date) {
if(as.Date(end_date) - as.Date(start_date) >= years(10)) {"%Y"}
else if (as.Date(end_date) - as.Date(start_date) >= months(13) &
as.Date(end_date) - as.Date(start_date) < years(6)) {"%Y"}
else if (as.Date(end_date) - as.Date(start_date) > months(4) &
as.Date(end_date) - as.Date(start_date) < months(13)) {"%b-%y"}
else {"%b-%y"}
}
ECB_Exchange_rates_long <-
all_prices_local_long %>%
filter(ticker %in% c("EURUSD_ECB", "EURGBP_ECB", "EURCHF_ECB", "EURJPY_ECB")) %>%
pivot_wider(names_from = ticker, values_from = PX_LAST) |>
mutate(EUREUR_ECB = 1) |>
pivot_longer(cols = -date, names_to = "currency", values_to = "exchange_rate")
#lastdate <- boven gedefinieerd
last_ultimo_year <- if(month(lastdate) == 12) lastdate else dates %>% filter(year(date) == year(lastdate) - 1) %>% tail(1) %>% as.integer %>% as.Date()
next_to_last_ultimo_year <- last_ultimo_year %m-% years(1)
next_to_last_ultimo_year2 <- next_to_last_ultimo_year %m-% years(1)
next_to_last_ultimo_year3 <- next_to_last_ultimo_year2 %m-% years(1)
next_to_last_ultimo_year4 <- next_to_last_ultimo_year3 %m-% years(1)
#hele jaartallen als getallen
last_year <- last_ultimo_year |> format("%Y") |> as.integer()
#daarna -1, -2 etc
next_to_lastdate <- ceiling_date(lastdate %m-% months(1), 'month') %m-% days(1)
next_to_lastdate2 <- ceiling_date(lastdate %m-% months(2), 'month') %m-% days(1)
next_to_lastdate3 <- ceiling_date(lastdate %m-% months(3), 'month') %m-% days(1)
next_to_lastdate4 <- ceiling_date(lastdate %m-% months(4), 'month') %m-% days(1)
one_year_ago <- ceiling_date(lastdate %m-% months(12), 'month') %m-% days(1)
last_quarter_start <-
dates %>%
filter(date != snapshot_date) %>%
mutate(month = month(date)) %>%
filter(month %in% c(3, 6, 9, 12)) %>%
select(date) %>% tail(2) %>% head(1) %>% pull()
last_quarter_end <-
dates %>%
filter(date != snapshot_date) %>%
mutate(month = month(date)) %>%
filter(month %in% c(3, 6, 9, 12)) %>%
select(-month) %>% tail(1) %>% pull()
last_quarter <- function(last_quarter_end) {
case_when(month(last_quarter_end) == 12 ~ str_c("Q4 ", year(last_quarter_end)),
month(last_quarter_end) ==  9 ~ str_c("Q3 ", year(last_quarter_end)),
month(last_quarter_end) ==  6 ~ str_c("Q2 ", year(last_quarter_end)),
month(last_quarter_end) ==  3 ~ str_c("Q1 ", year(last_quarter_end)))
}
start_date_looptijd_BENEGA <- as.Date("2016-12-31")
start_date_attr <- as.Date("2016-12-31")
start_date_vp_vf <- as.Date("2017-06-30")
start_date_fd <- as.Date("2018-08-31")
start_date_vd <- as.Date("2022-09-30")
div_tax <- 0 #na overleg 22-nov-2021
dividends_EUR_month_end <-
dvd_hist_all %>%
#div types:
#[1] "Spinoff"           "Regular Cash"      "Cancelled"         "Final"             "Interim"           "Stock Split"
#[7] "Income"            "Omitted"           "Return of Capital" "Special Cash"      "3rd Interim"       "2nd Interim"
#[13] "1st Interim"       "4th Interim"
#de volgende laat ik eruit: "Spinoff", "Cancelled", "Stock Split", "Omitted"
filter(!`Dividend Type` %in% c("Spinoff", "Cancelled", "Stock Split", "Omitted")) %>%
rename(pay_date = `Payable Date`, ex_date = `Ex-Date`, div = `Dividend Amount`) %>%
select(ticker, pay_date, ex_date, ticker, div) %>%
#datum naar maandeinde BETAALDATUM
mutate(date = floor_date(pay_date, unit = "month"),
date = lubridate::rollback(date + months(1))) %>%
#filter(ex_date < snapshot_date) %>%
#laatste datum terug naar snapshot_date zodat wisselkoersen erbij kunnen
mutate(date = ifelse(date > lastdate, snapshot_date, date),
date = as.Date(date)) %>%
#nu nog een wisselkoers erbiij
group_by(ticker) %>%
left_join(currencies, by = "ticker") %>%
#wisselkoersen erbij
left_join(ECB_Exchange_rates_long %>% mutate(CRNCY = str_sub(currency, start = 4, end = 6)), by = c("date", "CRNCY")) %>%
#voor UNA_NA GBP van maken
mutate(CRNCY = ifelse(ticker == "UNA_NA", "GBP", CRNCY)) %>%
mutate(div_EUR = ifelse(CRNCY == "GBP", div/exchange_rate/100, div/exchange_rate),
div_EUR_net = (1 - div_tax) * div_EUR) %>%
#nu datums na vandaag weer terug zetten
mutate(date = floor_date(pay_date, unit = "month"),
date = lubridate::rollback(date + months(1))) %>%
select(date, ex_date, pay_date, ticker, div, CRNCY, div_EUR, div_EUR_net) %>%
#NA dates eruit, die hebben mini bedragen
filter(date > start_date_of_data)
dividends_EUR_month_end_until_snapshot_date <-
dividends_EUR_month_end |>
filter(ex_date <= snapshot_date, ex_date >= lastdate) |>
mutate(date = ifelse(date > lastdate, snapshot_date, date),
date = as.Date(date))
JPM_daily_from_dec_2013 <-
#JPM in spreadsheet
readxl::read_xlsx(JPM_daily_AIRS_file, sheet = "JPM_daily", skip = 0, col_types = c("date", "numeric")) %>%
mutate(date = as.Date(date)) %>%
arrange(date)
JPM_MSDEWIN_M7EU_daily_from_dec_2013 <-
#joinen op data waar voor alle reeksen gegevens zijn
JPM_daily_from_dec_2013 %>%
left_join(MSDEWIN_daily_prices, by = "date") %>%
left_join(M7EU_daily_prices, by = "date")
#notitie uit 2018 - overige looptijden voor BENEGA
#         Dur   Mat   Mat range
#BENEGA   8.5   9.99  >1y
#
#BENEG1   1.9   1.9   1-3y
#BENEG2   3.7   3.9   3-5y
#BENEG3   5.4   5.6   5-7y
#BENEG4   7.7   8.2   7-10y
#BENEG5   16    20    10+y
MSDEWIN_snapshot <-
all_prices_local_long %>%
ungroup() %>%
filter(ticker == "MSDEWIN", date == snapshot_date) %>%
select(PX_LAST) %>%
pull()
#BENEGA als benadering voor JPM
BENEGA_last_ultimo <-
all_prices_local_long %>%
ungroup() %>%
filter(ticker == "BENEGA", date == lastdate) %>%
select(PX_LAST) %>%
pull()
BENEGA_snapshot <-
all_prices_local_long %>%
ungroup() %>%
filter(ticker == "BENEGA", date == snapshot_date) %>%
select(PX_LAST) %>%
pull()
CASH_snapshot <- 1
JPM_last_ultimo <- JPM_MSDEWIN_M7EU_daily_from_dec_2013 %>% filter(date == max(date)) %>% select(JPM) %>% as.double()
MSDEWIN_last_ultimo <- JPM_MSDEWIN_M7EU_daily_from_dec_2013 %>% filter(date == max(date)) %>% select(MSDEWIN) %>% as.double()
JPM_snapshot <- BENEGA_snapshot/BENEGA_last_ultimo * JPM_last_ultimo
JPM_MSDEWIN_M7EU_snapshot <-
tibble(date = as.Date(snapshot_date), JPM = JPM_snapshot, MSDEWIN = MSDEWIN_snapshot, M7EU = NA)
JPM_MSDEWIN_M7EU_daily_en_snapshot_onderelkaar <-
JPM_MSDEWIN_M7EU_daily_from_dec_2013 %>%
bind_rows(JPM_MSDEWIN_M7EU_snapshot) %>%
unique() #voor als snapshot_date == lastdate
bms_mixed_daily_en_snapshot_onderelkaar <-
JPM_MSDEWIN_M7EU_daily_en_snapshot_onderelkaar %>%
mutate(across(-date, ~ifelse(date == min(date), 0, (./lag(.) - 1)))) %>%
#hier MSDEWIN van voor dec 2016 vervangen door M7EU
mutate(MSDEWIN = ifelse(date <= start_date_attr, M7EU, MSDEWIN)) |>
#M7EU eruit halen
select(-M7EU) %>%
#mixed bms maken
mutate(BM7030 = 0.7 * MSDEWIN + 0.3 * JPM,
BM5050 = 0.5 * MSDEWIN + 0.5 * JPM,
BM3070 = 0.3 * MSDEWIN + 0.7 * JPM) |>
mutate(across(-date, ~cumprod(1 + .)))
#alleen maandeindes eruit halen
bm_prices_JPM_MSDEWIN_mixed_monthly_en_snapshot <-
bms_mixed_daily_en_snapshot_onderelkaar %>%
mutate(month = month(date),
#houden als volgende dag een andere maand is of als het de laatste is
keep = ifelse(month != lead(month) | date == max(.$date), 1, 0)) %>%
filter(keep == 1) %>%
select(-month, -keep) %>%
mutate(date = floor_date(date, unit = "month"),
date = lubridate::rollback(date + months(1))) %>%
mutate(date = ifelse(date > lastdate, snapshot_date, date),
date = as.Date(date))
msci_sector_tickers <- str_c("MXWO0", sector_levels_RD_short)
#lees sector indices in en maak breed
bm_MSCI_en_sector_indices_local <-
all_prices_local_long %>%
filter(ticker %in% c("MXWO", msci_sector_tickers)) %>%
pivot_wider(values_from = PX_LAST, names_from = ticker)
#MXWO0RE is niet meer beschikbaar.
#laatste datum MXWO0RE is 2023-10-31
#datums waarop en MXWO0RE niet meer beschikbaar is
dates_MXWO0RE_NA <- #kunnen meerdere datums zijn
bm_MSCI_en_sector_indices_local |>
select(date, MXWO0RE) |>
filter(is.na(MXWO0RE)) |>
select(date) |>
pull()
#lees gewichten op lastdate uit sheet_holdings (nodig voor berekening missing MXWO0RE)
weights_sectors_dates <-
readxl::read_xlsx(holdings_file, sheet = "mxwo_sector_wts") |>
mutate(date = as.Date(date)) |>
pivot_longer(-date) |>
rename(ticker = name, weight = value)
#perf RE op een datum op een NA datum
perf_RE <- function(date) {
perf_MXWO <- #perf MXWO vanaf  RE op date
all_prices_local_long |>
filter(ticker == "MXWO") |>
mutate(perf_MXWO = PX_LAST/lag(PX_LAST)-1) |>
filter(date == !!date) |>
ungroup() |>
select(perf_MXWO) |> pull()
weight_RE <- #gewicht RE op date
weights_sectors_dates |>
filter(date == dates$date[which(dates$date == !!date)-1]) |> # 1 date eerder
filter(ticker == "MXWO0RE") |>
ungroup() |>
select(weight) |> pull()
sum_wtd_perf_ex_RE <- #som gewogen perf ex RE
all_prices_local_long |>
#alleen MXWO0 en sector indices
filter(str_detect(ticker, "MXWO0")) %>%
#alleen datum en eerdere datum
filter(date %in% c(!!date, dates$date[which(dates$date == !!date)-1])) |>
#gewichten ernaast hangen
left_join(weights_sectors_dates, by = c("date", "ticker")) |>
mutate(weight = ifelse(ticker == "MXWO", 1, weight)) |>
group_by(ticker) |>
filter(ticker != "MXWO0RE") |>
mutate(perf = PX_LAST/lag(PX_LAST)-1,
wtd_perf = perf * lag(weight)) |>
ungroup() |>
reframe(sum_wtd_perf_ex_RE = sum(wtd_perf, na.rm = TRUE)) |> pull()
tibble(date = !!date,
perf_RE_NA = (perf_MXWO - sum_wtd_perf_ex_RE)/weight_RE)
}
#RE perf op NA datums
RE_perf_NA_dates <-
dates_MXWO0RE_NA |>
map_dfr(perf_RE)
# #invoegen in bm_MSCI_en_sector_indices_local
bm_MSCI_en_sector_indices_local <-
bm_MSCI_en_sector_indices_local |>
left_join(RE_perf_NA_dates, by = "date") |>
mutate(perf_RE_not_NA = ifelse(date == min(date), 0, MXWO0RE/lag(MXWO0RE)-1),
perf_RE = ifelse(!is.na(perf_RE_not_NA), perf_RE_not_NA, perf_RE_NA),
RE_index =ifelse(date == min(date), 1, cumprod(1+perf_RE))) |>
select(-c(perf_RE_NA, perf_RE_not_NA, perf_RE, MXWO0RE)) |>
rename(MXWO0RE = RE_index)
#naar long format
bm_MSCI_en_sector_indices_local_long <-
# all_prices_local_long %>%
#filter(str_detect(ticker, "MXWO"))
bm_MSCI_en_sector_indices_local |>
pivot_longer(-date, names_to = "ticker", values_to = "PX_LAST")
#in all_prices_local_long voegen
bm_MXWO0RE_index_local_long <-
bm_MSCI_en_sector_indices_local |>
select(date, MXWO0RE) |>
mutate(ticker = "MXWO0RE") |>
select(date, ticker, PX_LAST = MXWO0RE)
all_prices_local_long <-
all_prices_local_long |>
#oude eruit
filter(ticker != "MXWO0RE") |>
#nieuwe erin
bind_rows(bm_MXWO0RE_index_local_long)
#EINDE FIX MWWO0RE NA sinds nov 2023
bm_MSCI_en_sector_indices_eur_long <-
bm_MSCI_en_sector_indices_local_long %>%
left_join(ECB_Exchange_rates_long %>% filter(currency == "EURUSD_ECB"), by = "date") %>%
mutate(PX_LAST = PX_LAST/exchange_rate) %>%
select(date, ticker, PX_LAST)
bm_MSCI_en_sector_indices_eur <-
bm_MSCI_en_sector_indices_eur_long |>
pivot_wider(names_from = ticker, values_from = PX_LAST)
bm_prices_eur_long <-
bm_prices_JPM_MSDEWIN_mixed_monthly_en_snapshot %>%
left_join(bm_MSCI_en_sector_indices_eur, by = "date") %>%
pivot_longer(-date) %>%
rename(ticker = name, PX_LAST = value) %>%
group_by(ticker)
bm_prices_eur <-
bm_prices_eur_long %>%
pivot_wider(values_from = PX_LAST, names_from = ticker)
#portfolio_downloads_files inlezen uit spreadsheets genaamd portefeuille yyyymmdd, bv. "VOLK_Vlieger 50RD-50RM 20180930" met extensie xlsx. Daatoe dus opslaan als ...xlsx.
#als op pc of mac, lees VOLK files, maak portfolio_downloads_ruw
#en schrijf weg als portfolio_downloads_ruw_tm_mar25.rds
# if(bij_bavd | bij_pp) {
# portfolio_download_files <-
#     #alleen de VOLK_ files, die lopen tot en met 2025-03-31
#     list.files(str_c(pad_deel1, "portfolio_downloads/")) |> as_tibble() |> filter(str_starts(value, "VOLK_")) |> pull()
#
# portfolio_downloads_inlezen <- function(filename) {
#   readxl::read_excel(str_c(pad_deel1, "portfolio_downloads/", filename), range = cell_cols("A:J"), col_types = c(rep("text", 2), rep("numeric", 8))) %>%
#     as_tibble() %>%
#     mutate(portfolio_date = filename) |>
#     filter(!str_detect(`Opgelopen rente`, Naam)) |> #zit in separate kolom
#     #onnodige kolommen eruit
#     select(-c(`Begin koers`, Beginwaarde, `Ongerealiseer resultaat`, `% portf.`))
# }
#
#   #alle ruwe portfolio_downloads onder elkaar
#   portfolio_downloads_ruw_tm_mar25 <- map_dfr(portfolio_download_files, portfolio_downloads_inlezen)
#   write_rds(portfolio_downloads_ruw_tm_mar25, "portfolio_downloads_ruw_tm_mar25.rds")
#} else {
#als niet op pc of mac (op cloud), lees dan "portfolio_downloads_ruw.rds"
#portfolio_downloads_ruw_tm_mar25 t/m maart '25
#niet meer aanpassen
portfolio_downloads_ruw_tm_mar25 <- read_rds("portfolio_downloads_ruw_tm_mar25.rds")
#}
#portfolio_namen in bestandsnamen oude files t/m maart 2025
#juiste volgorde, als in portfolio_levels
portfolio_levels_old_monthly_AIRS_files <- c("50RD-50RM", "Duurzaam-50RD-50RM", "Vlieger 50RD-50RM", "Vlieger_Duurzaam-50RD-50RM", "30RD-70RM", "70RD-30RM", "100RD", "Vlieger 100RD")
portfolio_levels_new_monthly_AIRS_files <- c("50RD-50RM", "Duurzaam-50RD50RM",  "Vlieger 50RD-50RM", "Vlieger Duurz 50RD-50RM",    "30RD-70RM", "70RD-30RM", "100RD", "Vlieger 100RD")
#tabellen van maken voor join in functie hieronder
portfolio_levels_old_monthly_AIRS_files_tabel <- portfolio_levels_old_monthly_AIRS_files |> as_tibble() |> rename(portfolio_date = value)
portfolio_levels_new_monthly_AIRS_files_tabel <- portfolio_levels_new_monthly_AIRS_files |> as_tibble() |> rename(Portefeuille = value)
#tabel voor join
portfolio_levels_old_and_new_monthly_AIRS_files_tabel_en_portfolio_levels <-
portfolio_levels_new_monthly_AIRS_files_tabel |>
bind_cols(portfolio_levels_old_monthly_AIRS_files_tabel) |>
bind_cols(portfolio_levels_kolom)
portfolio_download_files_new <-
list.files(str_c(pad_deel1, "portfolio_downloads/")) |> as_tibble() |>
#alle BEHALVE de VOLK_ files, die lopen tot en met 2025-03-31,
# daarna beginnen ze met de datum en bevat de naam "Fondsenlijst
filter(str_detect(value, "Fondsenlijst")) |> pull()
if(bij_bavd | bij_pp) {
portfolio_downloads_new_inlezen <- function(filename) {
readxl::read_xlsx(str_c(pad_deel1, "portfolio_downloads/", filename)) |>
#regel cash
mutate(FondsOmschrijving =
ifelse(is.na(FondsOmschrijving), str_c("Modelportefeuilles " , Portefeuille), FondsOmschrijving)) |>
select(Naam = FondsOmschrijving,
Valuta,
Aantal = totaalAantal,
Koers = Fondskoers,
Marktwaarde = Waarde,
`Opgelopen rente` = RenteEUR,
Portefeuille) |>
filter(Portefeuille %in% portfolio_levels_new_monthly_AIRS_files) |>
left_join(portfolio_levels_old_and_new_monthly_AIRS_files_tabel_en_portfolio_levels, by = "Portefeuille") |>
mutate(portfolio_date = str_c("VOLK_", portfolio_date, " ", str_sub(filename, 1, 8), ".xlsx"),
Aantal = ifelse(is.na(Aantal), Marktwaarde, Aantal),
`Opgelopen rente` = ifelse(is.na(`Opgelopen rente`), 0, `Opgelopen rente`),
Koers = ifelse(is.na(Koers), 0, Koers)) |>
select(-Portefeuille, -portfolio)
}
#alle ruwe portfolio_downloads onder elkaar
portfolio_downloads_ruw_vanaf_apr25 <-
map_dfr(portfolio_download_files_new, portfolio_downloads_new_inlezen)
write_rds(portfolio_downloads_ruw_vanaf_apr25, "portfolio_downloads_ruw_vanaf_apr25.rds")
} else {
#als niet op pc of mac (op cloud), lees dan "portfolio_downloads_ruw.rds"
portfolio_downloads_ruw_vanaf_apr25 <- read_rds("portfolio_downloads_ruw_vanaf_apr25.rds")
}
#is er een tussentijdse update van de portfolio_downloads?
tussentijdse_update_uit_AIRS <-
portfolio_download_files_new |> as_tibble() |>
filter(str_detect(value, "tussentijds")) |>
nrow()
tussentijdse_update_uit_AIRS_date <-
portfolio_download_files_new |> as_tibble() |>
filter(str_detect(value, "tussentijds")) |> pull() |> str_sub(1, 8) |> ymd()
#isins
naam_isin <- readxl::read_excel(holdings_file, sheet = "naam_isin")
#portfolio_downloads_ruw_tm_mar25 en portfolio_downloads_ruw_vanaf_apr25 samenvoegen
portfolio_downloads_ruw <-
portfolio_downloads_ruw_tm_mar25  |>
bind_rows(portfolio_downloads_ruw_vanaf_apr25) |>
#ISINs erbij
left_join(naam_isin, by = "Naam")# |>
#Cash regels CASH_EUR
#mutate(ISIN = ifelse(str_starts(Naam, "Intern") | str_starts(Naam, "Modelportefeuilles"), "CASH_EUR", ISIN))
portfolios_tabel_koersen_AIRS_new <-
portfolio_downloads_ruw |>
mutate(portfolio_date = str_remove(portfolio_date, ".xlsx"),
date = str_sub(portfolio_date, start = nchar(portfolio_date) - 8),
date = ymd(date),
portfolio_AIRS = str_sub(portfolio_date, start = 1, end = nchar(portfolio_date) - 9),
portfolio_AIRS = str_remove(portfolio_AIRS, "VOLK_"),
Naam = ifelse(str_starts(Naam, "Intern") | str_starts(Naam, "Modelportefeuilles"), "Cash", Naam),
name_ = str_replace_all(Naam, " ", "_")) |>  #name_ kun je mee joinen
#portfolio naam erin via join en verwijderen overtollige kolommen
left_join(portfolio_levels_old_and_new_monthly_AIRS_files_tabel_en_portfolio_levels, by = c("portfolio_AIRS" = "portfolio_date")) |>
select(-c(portfolio_date, portfolio_AIRS, Portefeuille)) |>
#datums naar ultimo's
mutate(date = floor_date(date, unit = "month"),
date = lubridate::rollback(date + months(1))) |>
left_join(holdings, by = c("ISIN", "name_"))
#RenteEUR ontbreekt in read_xlsx("/Users/pieter/Downloads/2025 10 ultimo maand data Matthijs.xlsx")
#afleiden uit portfolios_tabel_koersen_AIRS_new
Naam_datum_RenteEUR_per_nom <-
portfolios_tabel_koersen_AIRS_new |>
filter(str_detect(Naam, "%")) |>
mutate(RenteEUR_per_nom = round(`Opgelopen rente`/Aantal, 6)) |>
select(Naam, date, RenteEUR_per_nom) |>
group_by(Naam, date) |>
slice(1)
# #inlezen nieuwe file met alle modelportefeuilles
portfolio_downloads_ruw_new_tmaug25 <-
#portfolio_downloads_new_inlezen2("/Users/pieter/Downloads/2025 10 ultimo maand data Matthijs.xlsx") |>
readxl::read_xlsx("/Users/pieter/Downloads/2025 10 ultimo maand data Matthijs.xlsx") |>
#overbodige portefeuilles eruit
filter(!Portefeuille %in% c("DOORNREST", "DOORNTEST", "NutsOhra", "12345", "AFM", "D00000", "DI8"),
!str_detect(Portefeuille, "20"), !str_detect(Portefeuille, "40"),
!str_detect(Portefeuille, "BELEG"), !str_detect(Portefeuille, "Beleg")) |>
#nu zijn over alle eventuele overige modelportefeuilles:
# [1] "100RD"                   "100RM"                   "50RD-50RM"               "30RD-70RM"               "70RD-30RM"                     # [6] "Vlieger 100RD"           "Vlieger 50RD-50RM"       "Vlieger 70RD-30RM"       "Duurzaam-30RD70RM"       "Duurzaam-50RD50RM"
#[11] "Duurzaam-100RD"          "Duurzaam-70RD30RM"       "Vlieger Duurz 100RD"     "Vlieger Duurz 50RD-50RM" "Vlieger Duurz 70RD-30RM"
#nu filteren op de bestaande modelportefeuilles
filter(Portefeuille %in% portfolio_levels_new_monthly_AIRS_files) |>
#nu zijn over
#[1] "100RD"                   "50RD-50RM"               "30RD-70RM"               "70RD-30RM"               "Vlieger 100RD"
#[6] "Vlieger 50RD-50RM"       "Duurzaam-50RD50RM"       "Vlieger Duurz 50RD-50RM"
mutate(date = as.Date(Peildatum),
FondsOmschrijving =
ifelse(is.na(FondsOmschrijving), str_c("Cash"), FondsOmschrijving),
ISINcode = ifelse(str_detect(FondsOmschrijving, "Cash"), "CASH_EUR", ISINcode)) |>
left_join(portfolio_levels_old_and_new_monthly_AIRS_files_tabel_en_portfolio_levels, by = "Portefeuille") |>
select(date,
Naam = FondsOmschrijving,
Valuta,
Aantal = totaalAantal,
Koers = Fondskoers,
Marktwaarde = WaardeEUR,
ISIN = ISINcode,
#`Opgelopen rente` = RenteEUR,
portfolio) |>
mutate(Aantal = ifelse(is.na(Aantal), Marktwaarde, Aantal),
#`Opgelopen rente` = ifelse(is.na(`Opgelopen rente`), 0, `Opgelopen rente`),
Koers = ifelse(is.na(Koers), 0, Koers),
Aantal = as.numeric(Aantal)#,
#
#Naam = ifelse(Naam == "Amundi MSCI World ESG Leaders ETF",
#                           "Amundi MSCI Europe ESG Selec UCITS ETF Acc", Naam),
#Naam = ifelse(Naam == "Amundi MSCI Europe ESG Leaders ETF",
#             "Amundi MSCI Europe ESG Selec UCITS ETF Acc", Naam)
) |>
group_by(date, portfolio)
portfolio_downloads_ruw_new_tmaug25_met_RenteEUR <-
portfolio_downloads_ruw_new_tmaug25 |>
left_join(Naam_datum_RenteEUR_per_nom, by = c("Naam", "date")) |>
mutate(RenteEUR = RenteEUR_per_nom * Aantal,
Koers = as.double(Koers),
Marktwaarde = as.double(Marktwaarde)) |>
replace_na(list(RenteEUR = 0)) |>
select(-RenteEUR_per_nom) |>
rename(`Opgelopen rente` = RenteEUR) |>
select(date, portfolio, ISIN, Naam, Valuta, Aantal, Koers, Marktwaarde, `Opgelopen rente`)
portfolio_downloads_new_inlezen2 <- function(filename) {
readxl::read_xlsx(str_c(pad_deel1, "portfolio_downloads/", filename)) |>
#regel cash
mutate(FondsOmschrijving =
ifelse(is.na(FondsOmschrijving), str_c("Modelportefeuilles " , Portefeuille), FondsOmschrijving)) |>
select(Naam = FondsOmschrijving,
Valuta,
ISIN = ISINcode,
Aantal = totaalAantal,
Koers = Fondskoers,
Marktwaarde = WaardeEUR,
`Opgelopen rente` = RenteEUR,
Portefeuille) |>
filter(Portefeuille %in% portfolio_levels_new_monthly_AIRS_files) |>
left_join(portfolio_levels_old_and_new_monthly_AIRS_files_tabel_en_portfolio_levels, by = "Portefeuille") |>
mutate(date = ymd(str_sub(filename, 1, 8)),
Aantal = ifelse(is.na(Aantal), Marktwaarde, Aantal),
Naam = ifelse(str_starts(Naam, "Intern") | str_starts(Naam, "Modelportefeuilles"), "Cash", Naam),
ISIN = ifelse(Naam == "Cash", "CASH_EUR", ISIN),
`Opgelopen rente` = ifelse(is.na(`Opgelopen rente`), 0, `Opgelopen rente`),
Koers = ifelse(is.na(Koers), 0, Koers),
Naam = ifelse(Naam == "L` Oreal", "LOreal", Naam),
Naam = ifelse(Naam == "Xtrackers World Health Care EUR", "Xtrackers MSCI World Health Care", Naam),
Naam = ifelse(Naam == "SPDR MSCI World Tech ETF EUR", "SPDR MSCI World Tech ETF", Naam)) |>
select(date, portfolio, ISIN, Naam, Valuta, Aantal, Koers, Marktwaarde, `Opgelopen rente`)
}
portfolio_downloads_ruw_new_vanaf_sep25 <-
portfolio_downloads_new_inlezen2("20250930_Fondsenlijst.xlsx")
portfolio_downloads_ruw_new <-
portfolio_downloads_ruw_new_tmaug25_met_RenteEUR |>
bind_rows(portfolio_downloads_ruw_new_vanaf_sep25) |>
#datums naar laaste dag van de maand
mutate(Koers = ifelse(Naam %in% c("Cash", "Opgelopen rente"), 1, Koers),
date = floor_date(date, unit = "month"),
date = lubridate::rollback(date + months(1))) |>
#datum filteren vanaf jan 2012
filter(date >= "2012-01-31") |>
#Marktwaarde inclusief Opgelopen rente
mutate(Marktwaarde = Marktwaarde + `Opgelopen rente`) |>
select(date, portfolio, ISIN, Naam, Valuta, Aantal, Koers, Marktwaarde)
#zo maken dat alleen de laatste naam wordt gebruikt
naam_isin <-
portfolio_downloads_ruw_new |>
ungroup() |>
select(date, Naam, ISIN) |>
group_by(ISIN) |>
#unieke regels
distinct() |>
#neem van elk de laatste
slice(n()) |>
select(Naam, ISIN)
startdates_portfolios_tabel <- portfolios_tabel |> ungroup() |>  group_by(portfolio) |> select(date, portfolio) |> filter(date == min(date)) |> unique() |> rename(startdate = date)
portfolio_downloads_ruw_new_cutoffs <-
portfolio_downloads_ruw_new |>
left_join(startdates_portfolios_tabel, by = "portfolio") |>
filter(date >= startdate) |>
select(-startdate)
portfolios_tabel |> group_by(portfolio, date) |> mutate(n_portfolios_tabel = n()) |> select(portfolio, date, n_portfolios_tabel) |> distinct() |> left_join(portfolio_downloads_ruw_new_cutoffs |> group_by(portfolio, date) |> mutate(n_portfolio_downloads_ruw_new_cutoffs = n()) |> select(portfolio, date, n_portfolio_downloads_ruw_new_cutoffs) |> distinct(), by = c("portfolio", "date")) |> mutate(diff = n_portfolio_downloads_ruw_new_cutoffs - n_portfolios_tabel) |> arrange(desc(diff))
portfolios_tabel_ISIN <-
portfolios_tabel |> ungroup() |> left_join(naam_isin, by = c("name" = "Naam"))
#De portefeuille 70RD 30RM ontbreekt op de datum 2013-12-31
#Op de datum 2024-08-31, portefeuilles VP100, VP50 en VD50
portfolios_tabel_ISIN |> left_join(portfolio_downloads_ruw_new_cutoffs, by = c("date", "portfolio", "ISIN")) |> mutate(koers_diff = Koers - price, Aantal_diff = Aantal - shares, Marktwaarde_diff = round(Marktwaarde - value_eur, 0)) |> View()
portfolios_tabel_ISIN |> left_join(portfolio_downloads_ruw_new_cutoffs, by = c("date", "portfolio", "ISIN")) |> mutate(koers_diff = Koers - price, Aantal_diff = Aantal - shares, Marktwaarde_diff = round(Marktwaarde - value_eur, 0)) |> arrange(Marktwaarde_diff)
portfolios_tabel_ISIN |> left_join(portfolio_downloads_ruw_new_cutoffs, by = c("date", "portfolio", "ISIN")) |> mutate(koers_diff = Koers - price, Aantal_diff = Aantal - shares, Marktwaarde_diff = round(Marktwaarde - value_eur, 0)) |> arrange(Marktwaarde_diff) |> View()
portfolios_tabel_ISIN |> left_join(portfolio_downloads_ruw_new_cutoffs, by = c("date", "portfolio", "ISIN")) |> mutate(koers_diff = Koers - price, Aantal_diff = Aantal - shares, Marktwaarde_diff = round(Marktwaarde - value_eur, 0)) |> arrange(Aantal_diff) |> View()
portfolios_tabel_ISIN |> left_join(portfolio_downloads_ruw_new_cutoffs, by = c("date", "portfolio", "ISIN")) |> mutate(koers_diff = Koers - price, Aantal_diff = Aantal - shares, Marktwaarde_diff = round(Marktwaarde - value_eur, 0)) |> arrange(Aantal_diff) |> filter(!str_detect(Naam, "Apple"), !str_detect(Naam, "Goog"))
portfolios_tabel_ISIN |> left_join(portfolio_downloads_ruw_new_cutoffs, by = c("date", "portfolio", "ISIN")) |> mutate(koers_diff = Koers - price, Aantal_diff = Aantal - shares, Marktwaarde_diff = round(Marktwaarde - value_eur, 0)) |> arrange(Aantal_diff) |> filter(!str_detect(Naam, "Apple"), !str_detect(Naam, "Alpha"))
holdings
holdings |> filter(str_detect(name, "tech"))
holdings |> filter(str_detect(name, "Tech"))
portfolios_tabel_ISIN |> left_join(portfolio_downloads_ruw_new_cutoffs, by = c("date", "portfolio", "ISIN")) |> mutate(koers_diff = Koers - price, Aantal_diff = Aantal - shares, Marktwaarde_diff = round(Marktwaarde - value_eur, 0)) |> arrange(Aantal_diff) |> filter(!str_detect(Naam, "Apple"), !str_detect(Naam, "Alpha"))
portfolios_tabel_ISIN |> left_join(portfolio_downloads_ruw_new_cutoffs, by = c("date", "portfolio", "ISIN")) |> mutate(koers_diff = Koers - price, Aantal_diff = Aantal - shares, Marktwaarde_diff = round(Marktwaarde - value_eur, 0)) |> arrange(desc(Aantal_diff)) |> filter(!str_detect(Naam, "Apple"), !str_detect(Naam, "Alpha"))
portfolios_tabel_ISIN |> left_join(portfolio_downloads_ruw_new_cutoffs, by = c("date", "portfolio", "ISIN")) |> mutate(koers_diff = Koers - price, Aantal_diff = Aantal - shares, Marktwaarde_diff = round(Marktwaarde - value_eur, 0)) |> arrange(desc(Aantal_diff)) |> filter(!str_detect(Naam, "Apple"), !str_detect(Naam, "Alpha")) |> select(Naam, shares, Aantal)
portfolios_tabel_ISIN |> left_join(portfolio_downloads_ruw_new_cutoffs, by = c("date", "portfolio", "ISIN")) |> mutate(koers_diff = Koers - price, Aantal_diff = Aantal - shares, Marktwaarde_diff = round(Marktwaarde - value_eur, 0)) |> arrange(desc(Aantal_diff)) |> filter(!str_detect(Naam, "Apple"), !str_detect(Naam, "Alpha")) |> select(date, portfolio, Naam, shares, Aantal, Aantal_diff)
portfolios_tabel_ISIN |> left_join(portfolio_downloads_ruw_new_cutoffs, by = c("date", "portfolio", "ISIN")) |> mutate(koers_diff = Koers - price, Aantal_diff = Aantal - shares, Marktwaarde_diff = round(Marktwaarde - value_eur, 0)) |> arrange(desc(Aantal_diff)) |> filter(!str_detect(Naam, "Apple"), !str_detect(Naam, "Alpha")) |> select(date, portfolio, Naam, shares, Aantal, Aantal_diff) |> arange(Aantal_diff)
portfolios_tabel_ISIN |> left_join(portfolio_downloads_ruw_new_cutoffs, by = c("date", "portfolio", "ISIN")) |> mutate(koers_diff = Koers - price, Aantal_diff = Aantal - shares, Marktwaarde_diff = round(Marktwaarde - value_eur, 0)) |> arrange(desc(Aantal_diff)) |> filter(!str_detect(Naam, "Apple"), !str_detect(Naam, "Alpha")) |> select(date, portfolio, Naam, shares, Aantal, Aantal_diff) |> arrange(Aantal_diff)
portfolios_tabel_ISIN |> left_join(portfolio_downloads_ruw_new_cutoffs, by = c("date", "portfolio", "ISIN")) |> mutate(koers_diff = Koers - price, Aantal_diff = Aantal - shares, Marktwaarde_diff = round(Marktwaarde - value_eur, 0)) |> arrange(desc(Aantal_diff)) |> filter(!str_detect(Naam, "Apple"), !str_detect(Naam, "Alpha")) |> select(date, portfolio, Naam, shares, Aantal, Aantal_diff) |> arrange(desc(Aantal_diff))
portfolios_tabel_ISIN |> left_join(portfolio_downloads_ruw_new_cutoffs, by = c("date", "portfolio", "ISIN")) |> mutate(koers_diff = Koers - price, Aantal_diff = Aantal - shares, Marktwaarde_diff = round(Marktwaarde - value_eur, 0)) |> arrange(desc(Aantal_diff)) |> filter(!str_detect(Naam, "Apple"), !str_detect(Naam, "Alpha")) |> select(date, portfolio, Naam, shares, Aantal, Aantal_diff) |> arrange(desc(Aantal_diff)) |> View()
portfolios_tabel_ISIN |> left_join(portfolio_downloads_ruw_new_cutoffs, by = c("date", "portfolio", "ISIN")) |> mutate(koers_diff = Koers - price, Aantal_diff = Aantal - shares, Marktwaarde_diff = round(Marktwaarde - value_eur, 0)) |> arrange(desc(Aantal_diff)) |> filter(!str_detect(Naam, "Apple"), !str_detect(Naam, "Alpha")) |> select(date, portfolio, Naam, shares, Aantal, Aantal_diff) |> arrange(desc(Aantal_diff)) |> View()
